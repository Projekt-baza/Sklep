-- MySQL Script generated by MySQL Workbench
-- Sat Oct 31 16:28:50 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sklep
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sklep
-- -----------------------------------------------------
Drop database if exists sklep;
CREATE SCHEMA IF NOT EXISTS `sklep` DEFAULT CHARACTER SET utf8 ;
USE `sklep` ;

-- -----------------------------------------------------
-- Table `sklep`.`kategoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sklep`.`kategoria` (
  `id_kategoria` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(45) NULL,
  PRIMARY KEY (`id_kategoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sklep`.`producent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sklep`.`producent` (
  `id_producent` INT NOT NULL,
  `nazwa` VARCHAR(45) NULL,
  PRIMARY KEY (`id_producent`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sklep`.`produkt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sklep`.`produkt` (
  `id_produkt` INT NOT NULL,
  `nazwa` VARCHAR(45) NULL,
  `typ` VARCHAR(45) NULL,
  `opis` VARCHAR(45) NULL,
  `zdj` VARCHAR(45) NULL,
  `cena-netto` DECIMAL(10,2) NULL,
  `cena-brutto` DECIMAL(10,2) NULL,
  `procent-vat` DECIMAL(8,2) NULL,
  `id_kategoria` INT NULL,
  `id_producent` INT NOT NULL,
  PRIMARY KEY (`id_produkt`),
  INDEX `fk_produkt_kategoria_idx` (`id_kategoria` ASC) ,
  INDEX `fk_produce_idx` (`id_producent` ASC) ,
  CONSTRAINT `fk_produkt_kategoria`
    FOREIGN KEY (`id_kategoria`)
    REFERENCES `sklep`.`kategoria` (`id_kategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produce`
    FOREIGN KEY (`id_producent`)
    REFERENCES `sklep`.`producent` (`id_producent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sklep`.`galeria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sklep`.`galeria` (
  `id_jpg` INT NOT NULL,
  `id_produkt` INT NULL,
  `nazwa_zdj` VARCHAR(45) NULL,
  PRIMARY KEY (`id_jpg`),
  INDEX `fk_galeria_produkt_idx` (`id_produkt` ASC) ,
  CONSTRAINT `fk_galeria_produkt`
    FOREIGN KEY (`id_produkt`)
    REFERENCES `sklep`.`produkt` (`id_produkt`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sklep`.`adres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sklep`.`adres` (
  `id_adres` INT NOT NULL,
  `miasto` VARCHAR(45) NULL,
  `miejscowosc` VARCHAR(45) NULL,
  `wojewodztwo` VARCHAR(45) NULL,
  `kod-pocztowy` VARCHAR(45) NULL,
  `ulica` VARCHAR(45) NULL,
  `nr_domu` VARCHAR(45) NULL,
  `nr_mieszkania` VARCHAR(45) NULL,
  PRIMARY KEY (`id_adres`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sklep`.`klient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sklep`.`klient` (
  `id_klient` INT NOT NULL AUTO_INCREMENT,
  `id_adres` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `haslo` VARCHAR(45) NOT NULL,
  `firma` VARCHAR(45) NULL,
  `regon` VARCHAR(45) NULL,
  `nip` VARCHAR(45) NULL,
  `nazwisko` VARCHAR(45) NOT NULL,
  `imie` VARCHAR(45) NOT NULL,
  'token' VARCHAR(45) not NULL,
  'potwierdzenie' int null,
  `rodzaj_klienta` VARCHAR(45) NULL,
  PRIMARY KEY (`id_klient`),
  INDEX `fk_klient_adres_idx` (`id_adres` ASC) ,
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) ,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) ,
  CONSTRAINT `fk_klient_adres`
    FOREIGN KEY (`id_adres`)
    REFERENCES `sklep`.`adres` (`id_adres`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sklep`.`zamowienia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sklep`.`zamowienia` (
  `id_zamowienia` INT NOT NULL,
  `id_klient` INT NULL,
  `data_zamowienia` DATETIME NULL,
  `przyjeto` TINYTEXT NULL,
  `data_przyjecia` DATETIME NULL,
  `zaplacono` VARCHAR(45) NULL,
  `data_wysylki` VARCHAR(45) NULL,
  `zrealizowano` TINYTEXT NULL,
  `data_realizacji` DATETIME NULL,
  PRIMARY KEY (`id_zamowienia`),
  INDEX `fk_zamowienia_klient_idx` (`id_klient` ASC) ,
  CONSTRAINT `fk_zamowienia_klient`
    FOREIGN KEY (`id_klient`)
    REFERENCES `sklep`.`klient` (`id_klient`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sklep`.`zamowienia-produkty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sklep`.`zamowienia_produkty` (
  `id_zamowienia_produkty` INT NOT NULL,
  `id_zamowienia` INT NULL,
  `id_produkt` INT NOT NULL,
  `cena_netto` DECIMAL(10,2) NULL,
  `cena_brutto` DECIMAL(10,2) NULL,
  PRIMARY KEY (`id_zamowienia_produkty`),
  INDEX `fk_zamowienia-produkty_zamowienia_idx` (`id_zamowienia` ASC) ,
  INDEX `fk_zamowienia-produkty_produkty_idx` (`id_produkt` ASC) ,
  CONSTRAINT `fk_zamowienia_produkty_zamowienia`
    FOREIGN KEY (`id_zamowienia`)
    REFERENCES `sklep`.`zamowienia` (`id_zamowienia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_zamowienia_produkty_produkty`
    FOREIGN KEY (`id_produkt`)
    REFERENCES `sklep`.`produkt` (`id_produkt`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
